this = {}; _fn = {}   -- This file was generated by Code12 from "level8.java"
package.path = package.path .. ';../../Desktop/Code12/?.lua;../../../Desktop/Code12/?.lua'
require('Code12.api')
    
    --Global variables
    this.startPhase = true
    this.mainPhase = false
    this.endPhase = false
    this.updates = 0
    this.screenHeight = 0; 
    this.screenWidth = 0; 
    --Player character
    this.ghostBird = nil; 
    this.bird = nil; 
    this.flap = "downflap"
    this.filename = nil; 
    this.BIRDHIEGHT = 8
    this.birdX = 0; 
    this.birdY = 0; 
    this.movingUp = true
    --Score
    this.scoreObj = nil; 
    this.scoreX = 0; 
    this.scoreY = 0; 
    this.score = 0; 
    this.scoreHeight = 5
    this.highScore = 0
    this.scoreImgFile = "0.png"
    --Background
    this.back1 = nil; 
    this.back2 = nil; 
    --Ground
    this.ground1 = nil; 
    this.ground2 = nil; 
    this.ground3 = nil; 
    --Pipes
    this.goal1 = nil; 
    this.goal2 = nil; 
    this.randY = 0; 
    this.hit1 = false
    this.hit2 = false
    this.goalY = 0; 
    this.pipeUp1 = nil; 
    this.pipeDown1 = nil; 
    this.pipeUp2 = nil; 
    this.pipeDown2 = nil; 
    --End Screen
    this.endY = 0; 
    this.gameOverImg = nil; 
    this.endScoreText = nil; 
    this.endScoreImg = nil; 
    this.endBestText = nil; 
    this.endBestImg = nil; 
    this.restartText = nil; 
    this.restartBox = nil; 
    
    
        
        
    
    
    function _fn.start()
        
        ct.setScreen("Main")   --Names the main screen and stores everything after this to the Main screen
        
        --sets the height of the sceen to match the height of the background
        ct.setHeight(128)
        this.screenHeight = 128   --sets h to 128 (the height of the screen) 
        this.screenWidth = ct.getWidth()   --sets w to 100 (the width of the screen)  
        
        this.back1 = ct.image("background-day.png", this.screenWidth / 2, this.screenHeight / 2, this.screenWidth)
        this.back2 = ct.image("background-day.png", 1.5 * this.screenWidth, this.screenHeight / 2, this.screenWidth)
        this.back1:setLayer(0)
        this.back2:setLayer(0)
        this.back1.xSpeed = -0.5
        this.back2.xSpeed = -0.5
        
        --draws the bird ct.image("filename", x, y, h)
        this.birdX = this.screenWidth / 2.0   -- sets x to 50 (the x position of the bird)
        this.birdY = this.screenHeight / 2.0   -- sets y to 64  (the y position of the bird)
        --height of the bird (the height of the bird)
        this.bird = ct.image("yellowbird-downflap.png", this.birdX, this.birdY, this.BIRDHIEGHT)   --uses x and y to stand in for 50, 64
        this.ghostBird = ct.rect(this.birdX, this.birdY, 4.5, 4.5)
        this.ghostBird.visible = false
        this.ghostBird.ySpeed = 0.5
        --draws the count
        --the value of x does not change (the x position of the bird and number are equal)
        this.scoreX = this.birdX   --sets y to 16 (the y position of the number)
        this.scoreY = this.screenHeight / 8.0
        this.scoreObj = ct.image(this.scoreImgFile, this.scoreX, this.scoreY, this.scoreHeight)
        this.scoreObj:setLayer(3)
        this.score = 0
        
        --draws the ground
        local y = 122   --sets y to 122 (the y positoin of all the pieces of the base)
        local h = 40   --sets h to 40 (the height of all the pieces of the base)
        --since the x position of each piece of the base is different it is not useful to use a variable
        local base1 = ct.image("base.png", 20, y, h)
        local base2 = ct.image("base.png", 60, y, h)
        local base3 = ct.image("base.png", 100, y, h)
        base1:setLayer(4)
        base2:setLayer(4)
        base3:setLayer(4)
        
        this.randY = ct.random(38, 90)
        this.goal1 = ct.rect(this.screenWidth + 40, this.randY, this.BIRDHIEGHT, this.BIRDHIEGHT * 2.5)
        this.goal1.xSpeed = -0.5
        this.goal1:setFillColor(nil)
        this.goal1:setLineColor(nil)
        
        this.randY = ct.random(38, 90)
        this.goal2 = ct.rect(this.screenWidth + 110, this.randY, this.BIRDHIEGHT, this.BIRDHIEGHT * 2.5)
        this.goal2.xSpeed = -0.5
        this.goal2:setFillColor(nil)
        this.goal2:setLineColor(nil)
        
        --Creates the pipes
        this.pipeUp1 = ct.image("pipe_green_up.png", this.goal1.x, this.goal1.y + 75, 10.5)
        this.pipeUp1.xSpeed = -0.5
        this.pipeUp1:setLayer(2)
        
        this.pipeUp2 = ct.image("pipe_green_up.png", this.goal2.x, this.goal2.y + 75, 10.5)
        this.pipeUp2.xSpeed = -0.5
        this.pipeUp2:setLayer(2)
        
        this.pipeDown1 = ct.image("pipe_green_down.png", this.goal1.x, this.goal1.y - 75, 10.5)
        this.pipeDown1.xSpeed = -0.5
        this.pipeDown1:setLayer(2)
        
        this.pipeDown2 = ct.image("pipe_green_down.png", this.goal2.x, this.goal2.y - 75, 10.5)
        this.pipeDown2.xSpeed = -0.5
        this.pipeDown2:setLayer(2)
        
        --End screen variables
        this.endY = this.scoreY + 8
        
        ct.setScreen("Start")   --Names the start screen
        
        ct.image("background-day.png", this.screenWidth / 2, this.screenHeight / 2, this.screenWidth)
        ct.image("message.png", this.screenWidth / 2, 50, 50)
        
    end
    
    function _fn.update()
        
        --Checks for click to start game
        if this.startPhase then
            
            if ct.clicked() or ct.charTyped(" ") then
                
                this.startPhase = false
                this.mainPhase = true
                ct.setScreen("Main")
            end
        end
        --game updates only trigger if not on the star menu or end game screen
        if this.mainPhase then
            
            
            --Handles keypress input
            if ct.clicked() or ct.charTyped(" ") then
                
                this.ghostBird.y = this.ghostBird.y - (3.5)
                this.ghostBird.ySpeed = -1
            end
            
            --Keeps the visible bird at the same y position as the invisible tracker bird
            if this.bird.y ~= this.ghostBird.y then
                
                this.bird.y = this.ghostBird.y
                this.bird.ySpeed = this.ghostBird.ySpeed
            end
            
            if (this.ghostBird:hit(this.goal1) and not this.hit1) then
                
                this.hit1 = true
                this.score = this.score + (1)
                this.scoreImgFile = ct.formatInt(this.score)..".png"
                this.scoreObj:delete()
                this.scoreObj = ct.image(this.scoreImgFile, this.scoreX, this.scoreY, this.scoreHeight)
                this.scoreObj:setLayer(2)
            end
            
            if this.ghostBird:hit(this.goal2) and not this.hit2 then
                
                this.hit2 = true
                this.score = this.score + (1)
                
                if this.score == 10 then
                    
                    this.scoreHeight = 10
                end
                
                this.scoreImgFile = ct.formatInt(this.score)..".png"
                this.scoreObj:delete()
                this.scoreObj = ct.image(this.scoreImgFile, this.scoreX, this.scoreY, this.scoreHeight)
                this.scoreObj:setLayer(2)
            end
            --Handles the animation of the bird
            this.updates = this.updates + 1
            local changed = false   -- boolean to store whether the flap frame has been changed yet
            if this.updates == 10 then
                
                if (this.flap == "downflap") and not changed then
                    
                    this.flap = "midflap"
                    changed = true
                end
                
                if (this.flap == "midflap") and not changed then
                    
                    this.flap = "upflap"
                    changed = true
                end
                
                if (this.flap == "upflap") and not changed then
                    
                    this.flap = "downflap"
                    changed = true
                end
                
                this.filename = "yellowbird-"..this.flap..".png"
                
                this.birdY = this.ghostBird.y
                this.bird:delete()
                this.bird = ct.image(this.filename, this.birdX, this.birdY, this.BIRDHIEGHT)
                this.updates = 0
            end
            
            --Handles the background recycling
            if this.back1.x == -(this.screenWidth / 2) then
                
                this.back1.x = 1.5 * this.screenWidth
            end
            
            if this.back2.x == -(this.screenWidth / 2) then
                
                this.back2.x = 1.5 * this.screenWidth
            end
            
            --Handles the goal and pipes reset when offscreen
            if this.goal1.x < 0 - this.goal1.width then
                
                --Goal1
                this.goal1.x = this.screenWidth + 40
                this.randY = ct.random(38, 90)
                this.goal1.y = this.randY
                this.hit1 = false
                
                --pipes
                this.pipeUp1.x = this.goal1.x
                this.pipeUp1.y = this.goal1.y + 75
                
                this.pipeDown1.x = this.goal1.x
                this.pipeDown1.y = this.goal1.y - 75
            end
            
            if this.goal2.x < 0 - this.goal2.width then
                
                --Goal2
                this.goal2.x = this.screenWidth + 40
                this.randY = ct.random(28, 100)
                this.goal2.y = this.randY
                this.hit2 = false
                
                --pipes
                this.pipeUp2.x = this.goal2.x
                this.pipeUp2.y = this.goal2.y + 75
                
                this.pipeDown2.x = this.goal2.x
                this.pipeDown2.y = this.goal2.y - 75
            end
            
            --Handles bird movement
            if this.ghostBird.ySpeed < 3 then
                
                this.ghostBird.ySpeed = this.ghostBird.ySpeed + (0.05)
            end
            
            if this.ghostBird.y < -30 then
                
                this.ghostBird.y = 0
            end
            
            --Checks if the bird has crashed into the ground
            if this.ghostBird.y > 112 or this.ghostBird:hit(this.pipeUp1) or this.ghostBird:hit(this.pipeDown1) or this.ghostBird:hit(this.pipeUp2) or this.ghostBird:hit(this.pipeDown2) then
                
                this.mainPhase = false
                this.endPhase = true
                this.back1.xSpeed = 0
                this.back2.xSpeed = 0
                this.goal1.xSpeed = 0
                this.goal2.xSpeed = 0
                this.pipeUp1.xSpeed = 0
                this.pipeDown1.xSpeed = 0
                this.pipeUp2.xSpeed = 0
                this.pipeDown2.xSpeed = 0
                this.ghostBird.ySpeed = 0
                this.bird.ySpeed = 0
                
                if this.score > this.highScore then
                    
                    this.highScore = this.score
                end
                
                --Draws the endgame score and highscore screen
                this.scoreObj:delete()
                this.gameOverImg = ct.image("gameover.png", this.scoreX, this.endY, 45)
                this.gameOverImg:setLayer(4)
                
                this.endScoreText = ct.text("Score", this.scoreX, this.endY + 10, 8, "white")
                this.endScoreText:setLayer(4)
                
                this.scoreImgFile = ct.formatInt(this.score)..".png"
                this.endScoreImg = ct.image(this.scoreImgFile, this.scoreX, this.endY + 20, this.scoreHeight)
                this.endScoreImg:setLayer(4)
                
                this.endBestText = ct.text("HighScore", this.scoreX, this.endY + 30, 8, "white")
                this.endBestText:setLayer(4)
                
                this.scoreImgFile = ct.formatInt(this.highScore)..".png"
                this.endBestImg = ct.image(this.scoreImgFile, this.scoreX, this.endY + 38, this.scoreHeight)
                this.endBestImg:setLayer(4)
                
                this.restartText = ct.text("Restart", this.scoreX, this.endY + 48, 10, "white")
                this.restartText:setLayer(4)
                
                this.restartText.clickable = false
                this.restartBox = ct.rect(this.scoreX, this.endY + 48, 30, 10, "orange")
                this.restartBox:setLayer(3)
            end
        end
        if this.endPhase then
            
            if this.restartBox:clicked() or ct.charTyped(" ") then   --Restarts the game
                
                --Sets Phase flags
                this.mainPhase = true
                this.endPhase = false
                
                --Deletes Endscreen 
                this.gameOverImg:delete()
                this.endScoreText:delete()
                this.endScoreImg:delete()
                this.endBestText:delete()
                this.endBestImg:delete()
                this.restartText:delete()
                this.restartBox:delete()
                
                --Back
                this.back1.xSpeed = -0.5
                this.back2.xSpeed = -0.5
                
                --Bird
                this.birdY = this.screenHeight / 2.0
                this.ghostBird.y = this.birdY
                this.ghostBird.ySpeed = 0.5
                
                --Score
                this.score = 0
                this.scoreImgFile = "0.png"
                this.scoreHeight = 5   --resets the score height in case the player scored over 10
                this.scoreObj = ct.image(this.scoreImgFile, this.scoreX, this.scoreY, this.scoreHeight)
                this.scoreObj:setLayer(3)
                
                --Goals
                this.randY = ct.random(38, 90)
                this.goal1.x = this.screenWidth + 40
                this.goal1.y = this.randY
                this.goal1.xSpeed = -0.5
                
                this.randY = ct.random(38, 90)
                this.goal2.x = this.screenWidth + 110
                this.goal2.y = this.randY
                this.goal2.xSpeed = -0.5
                
                --Sets hit flags
                this.hit1 = false
                this.hit2 = false
                
                --Pipes
                this.pipeUp1.x = this.goal1.x
                this.pipeUp1.y = this.goal1.y + 75
                this.pipeUp1.xSpeed = -0.5
                
                this.pipeDown1.x = this.goal1.x
                this.pipeDown1.y = this.goal1.y - 75
                this.pipeDown1.xSpeed = -0.5
                
                
                this.pipeUp2.x = this.goal2.x
                this.pipeUp2.y = this.goal2.y + 75
                this.pipeUp2.xSpeed = -0.5
                
                this.pipeDown2.x = this.goal2.x
                this.pipeDown2.y = this.goal2.y - 75
                this.pipeDown2.xSpeed = -0.5
            end
        end
    end
    

