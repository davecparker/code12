this = {}; _fn = {}   -- This file was generated by Code12 from "Stopwatch.java"
package.path = package.path .. ';../../Desktop/Code12/?.lua;../../../Desktop/Code12/?.lua'
require('Code12.api')

-- Stopwatch
-- Code12 Programming Concepts 8: If-else
-- A stopwatch app with lap functionality.

-- Case use test for the following subset of the Code12 API:
-- Screen Management
-- -----------------
-- ct.setTitle( String title )
-- ct.setHeight( double height )
-- double ct.getHeight( ) 
-- ct.clearGroup( String group )
-- ct.setBackColor( String color )
-- 
-- Math and Misc.
-- --------------
-- int ct.getTimer( )
-- 
-- Type Conversion
-- ---------------
-- int ct.toInt( double d )                // truncates
-- int ct.parseInt( String s )             // 0 if failure
-- boolean ct.canParseInt( String s )
-- double ct.parseNumber( String s )       // NaN if failure
-- boolean ct.canParseNumber( String s )
-- String ct.formatDecimal( double d, int numPlaces )
-- String ct.formatInt( int i, int numDigits )    // uses leading 0's




    
    
        
        
    
    
    this.timeDisplay = nil; 
    this.startButton = nil; 
    this.stopButton = nil; 
    this.lapButton = nil; 
    this.resetButton = nil; 
    this.startTime = 0; 
    this.lapStartTime = 0; 
    this.pauseTime = 0; 
    this.pauseLength = 0; 
    this.stopwatchRunning = false; 
    this.lapCount = 0; 
    
    function start()
        
        -- Make the title and background
        ct.setTitle("Stopwatch")
        ct.setBackColor("light blue")
        
        -- Make time display
        local timeHeight = 15
        this.timeDisplay = ct.text("00:00:00.00", 0, timeHeight, timeHeight)
        this.timeDisplay.x = 50 - this.timeDisplay.width / 2
        this.timeDisplay:align("bottom left")
        
        -- Make start button
        local buttonHeight = 10
        local buttonOffset = 15
        this.startButton = ct.text("Start", 50 - buttonOffset, this.timeDisplay.y + buttonHeight, buttonHeight)
        this.startButton:align("bottom")
        this.startButton.clickable = true
        
        -- Make stop button
        this.stopButton = ct.text("Stop", this.startButton.x, this.startButton.y, buttonHeight)
        this.stopButton:align("bottom")
        this.stopButton.clickable = true
        this.stopButton.visible = false
        
        -- Make reset button
        this.resetButton = ct.text("Reset", 50 + buttonOffset, this.startButton.y, buttonHeight)
        this.resetButton:align("bottom")
        this.resetButton.clickable = true
        this.resetButton.visible = false
        
        -- Make lap button
        this.lapButton = ct.text("Lap", this.resetButton.x, this.resetButton.y, buttonHeight)
        this.lapButton:align("bottom")
        this.lapButton.clickable = true
        this.lapButton.visible = false
        
        -- Initialize state and count variables
        this.stopwatchRunning = false
        this.startTime = 0
        this.lapCount = 0
        this.lapStartTime = 0
        this.pauseTime = 0
        this.pauseLength = 0
    end
    
    function update()
        
        if this.stopwatchRunning then
            
            -- Update timeDisplay
            local seconds = (ct.getTimer() - this.startTime) / 1000.0
            local elapsedTime = ct.toInt(seconds)
            local hours = ct.intDiv(elapsedTime, 3600)
            elapsedTime = elapsedTime % 3600
            local minutes = ct.intDiv(elapsedTime, 60)
            seconds = seconds - hours * 3600 - minutes * 60
            local hrs = ct.formatInt(hours, 2)
            local min = ct.formatInt(minutes, 2)
            local sec = ct.formatDecimal(seconds, 2)
            if seconds < 10 then
                sec = "0" .. sec; end
            this.timeDisplay:setText(hrs .. ":" .. min .. ":" .. sec)
        end
    end
    
    function onMousePress(obj, x, y)
        
        if obj == this.startButton then
            
            this.stopwatchRunning = true
            this.startButton.visible = false
            this.stopButton.visible = true
            this.lapButton.visible = true
            this.resetButton.visible = false
            
            this.startTime = ct.getTimer()
            if this.pauseTime ~= 0 then
                
                this.pauseLength = this.pauseLength + (this.startTime - this.pauseTime)
            end
            if this.lapStartTime == 0 then
                
                this.lapStartTime = this.startTime
            end
            this.startTime = this.startTime - (this.pauseLength)
        
        elseif obj == this.stopButton then
            
            this.pauseTime = ct.getTimer()
            this.stopwatchRunning = false
            this.startButton.visible = true
            this.stopButton.visible = false
            this.lapButton.visible = false
            this.resetButton.visible = true
        
        elseif obj == this.resetButton then
            
            this.timeDisplay:setText("00:00:00.00")
            this.resetButton.visible = false
            this.lapCount = 0
            this.lapStartTime = 0
            this.pauseTime = 0
            ct.clearGroup("laps")
            ct.setHeight(100)
        
        elseif obj == this.lapButton then
            
            this.lapCount = this.lapCount + 1
            local time = ct.getTimer()
            local lapLength = time - this.lapStartTime - this.pauseLength
            this.lapStartTime = time
            this.pauseLength = 0
            local timeText = this.timeDisplay:getText()
            local lapLengthText = nil; 
            if this.lapCount == 1 then
                
                lapLengthText = timeText
            
            else 
                
                -- Convert lapLength to lapLengthText
                local seconds = lapLength / 1000.0
                local elapsedTime = ct.toInt(seconds)
                local hours = ct.intDiv(elapsedTime, 3600)
                elapsedTime = elapsedTime % 3600
                local minutes = ct.intDiv(elapsedTime, 60)
                seconds = seconds - hours * 3600 - minutes * 60
                local hrs = ct.formatInt(hours, 2)
                local min = ct.formatInt(minutes, 2)
                local sec = ct.formatDecimal(seconds, 2)
                if seconds < 10 then
                    sec = "0" .. sec; end
                lapLengthText = hrs .. ":" .. min .. ":" .. sec
            end
            local lapText = this.lapCount .. "  " .. timeText .. " (+" .. lapLengthText .. ")"
            local lapHeight = 7
            local xLap = 90
            local yLap = this.startButton.y + lapHeight * this.lapCount
            local lapDisplay = ct.text(lapText, xLap, yLap, lapHeight)
            lapDisplay.group = "laps"
            lapDisplay:align("bottom right")
            if yLap > ct.getHeight() then
                ct.setHeight(yLap); end
        end
    end
