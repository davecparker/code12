this = {}; _fn = {}   -- This file was generated by Code12 from "EventsWhiteBoxTest.java"
package.path = package.path .. ';../../Desktop/Code12/?.lua;../../../Desktop/Code12/?.lua'
require('Code12.api')
    
    this.boxes = nil; 
    this.PAD = 20
    this.ROWS = 10
    this.COLS = 10
    
    this.lastX = 0; this.lastY = 0; 
    this.selected = false
    
    
        
        
    
    
    function _fn.start()
        
        -- instantiate the array
        this.boxes = { length = 100, default = nil }
        
        local gameWidth = ct.getWidth()
        local gameHeight = ct.getHeight()
        
        local xInc = (gameWidth - 2 * this.PAD) / this.COLS
        local yInc = (gameHeight - 2 * this.PAD) / this.ROWS
        
        -- draw boxes(game rects)
        local i = 0; while i < this.ROWS do
            
            local y = this.PAD + i * yInc
            local j = 0; while j < this.COLS do
                
                local x = this.PAD + j * xInc
                ct.checkArrayIndex(this.boxes, i * j); this.boxes[1+(i * j)] = ct.rect(x, y, xInc, yInc)
            j = j + 1; end
            
        i = i + 1; end
        --   squares = new GameObj[ROWS][COLS];
        -- 
        --       for ( int i = 0; i < ROWS; i++)
        --       {
        --          double y = PAD + i*yInc;
        --          for ( int j = 0; j < COLS; j++)
        --          {
        --             double x = PAD + j*xInc;
        --             squares[i][j] = ct.rect(x,y,xInc, yInc );  
        --          }
        --       }
        
        -- GameObj newArray[] = new GameObj[squares.length*squares[0].length];
        --     for ( int i = 0; i < squares.length; i++ )
        --     {
        --         GameObj[] row = squares[i];
        --         for ( int j = 0; j < row.length; j++ )
        --         {
        --             GameObj number = squares[i][j];
        --             newArray[i*row.length+j] = number;
        --         }
        --     }
        
        
    end
    
    function _fn.update()
        
        -- Allow tiles to be clicked
        local i = 0; while i < this.ROWS do
            
            local j = 0; while j < this.COLS do
                
                ct.checkArrayIndex(this.boxes, i * j); this.boxes[1+(i * j)].clickable = true
            j = j + 1; end
        i = i + 1; end
        
    end
    
    function _fn.onMousePress(obj, x, y)
        
        this.lastX = x
        this.lastY = y
        
        if obj ~= nil then
            
            local i = 0; while i < this.ROWS do
                
                local j = 0; while j < this.COLS do
                    
                    if ct.indexArray(this.boxes, i * j):containsPoint(x, y) then
                        
                        ct.indexArray(this.boxes, i * j):setFillColor("red")
                        ct.println("A tile located at: [" .. ct.toInt(ct.indexArray(this.boxes, i * j).x) .. "," .. ct.toInt(ct.indexArray(this.boxes, i * j).y) .. " ] was clicked.")
                    end
                j = j + 1; end
                
            i = i + 1; end
        end
        
    end
    
    
