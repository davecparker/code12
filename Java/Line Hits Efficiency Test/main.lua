this = {}; _fn = {}   -- This file was generated by Code12 from "LineCollisionsEfficiencyTest2.java"
package.path = package.path .. ';../../Desktop/Code12/?.lua;../../../Desktop/Code12/?.lua'
require('Code12.api')
    
    
        
        
    
    
    function _fn.start()
        
        local numObjs = 1000
        local rects = { length = numObjs, default = nil }
        local lines = { length = numObjs, default = nil }
        -- Make random rects and lines
        local i = 0; while i < numObjs do
            
            local x = ct.random(0, 100)
            local y = ct.random(0, 100)
            local width = ct.random(1, 20)
            local height = ct.random(1, 20)
            ct.checkArrayIndex(rects, i); rects[1+(i)] = ct.rect(x, y, width, height)
            local x1 = ct.random(0, 100)
            local y1 = ct.random(0, 100)
            local x2 = ct.random(0, 100)
            local y2 = ct.random(0, 100)
            ct.checkArrayIndex(lines, i); lines[1+(i)] = ct.line(x1, y1, x2, y2)
        i = i + 1; end
        -- Print times
        ct.println("hitTime(rects, lines): " .. _fn.hitTime(rects, lines))
        ct.println("hitTime(lines, rects): " .. _fn.hitTime(lines, rects))
        ct.println("hitTime(rects, rects): " .. _fn.hitTime(rects, rects))
        ct.println("hitTime(lines, lines): " .. _fn.hitTime(lines, lines))
        
    end
    
    -- Returns the number of milliseconds for all calls of objs1[i].hit(objs2[j]), 
    function _fn.hitTime(objs1, objs2)
        
        local len1 = objs1.length
        local len2 = objs2.length
        local startTime = ct.getTimer()
        local i = 0; while i < len1 do
            local j = 0; while j < len2 do
                ct.indexArray(objs1, i):hit(ct.indexArray(objs2, i)); j = j + 1; end; i = i + 1; end
        return ct.getTimer() - startTime
    end
