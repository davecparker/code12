this = {}; _fn = {}   -- This file was generated by Code12 from "Game.java"
package.path = package.path .. ';../../Desktop/Code12/?.lua;../../../Desktop/Code12/?.lua'
require('Code12.api')

    
    this.player = nil; this.goal = nil; this.score = nil; 
    this.enemies = nil; 
    this.playerDead = false
    this.enemyCount = 0
    this.scoreCount = 0
    
    
        
        
    
    
    function _fn.start()
        
        ct.setBackColor("gray")
        
        this.player = ct.circle((ct.toInt(ct.getWidth() / 2)), (3 * ct.toInt(ct.getHeight() / 4)), 5, "white")
        this.player:setLineColor("white")
        
        this.goal = ct.circle(ct.random(0, ct.toInt(ct.getWidth())), ct.random(ct.toInt(ct.getHeight() / 3), ct.toInt(ct.getHeight())), 3, "light green")
        this.goal:setLineColor("light green")
        
        this.score = ct.text("Score: " .. this.scoreCount .. "    Goal: 10", ct.toInt(ct.getWidth() / 2), ct.toInt(ct.getHeight() / 25), 5, "dark gray")
        
        this.enemies = { length = 10, default = nil }
        local i = 0; while i < this.enemies.length do
            
            ct.checkArrayIndex(this.enemies, i); this.enemies[1+(i)] = ct.rect(ct.random(0, ct.toInt(ct.getWidth())), -2, 3, 3, "dark gray")
            ct.indexArray(this.enemies, i):setLineColor("dark gray")
            ct.checkArrayIndex(this.enemies, i); this.enemies[1+(i)].group = "enemies"
        i = i + 1; end
    end
    
    function _fn.update()
        
        if not this.playerDead then
            
            if _fn.isBeyondLeftBoundary(this.player) then
                this.player.x = ct.getWidth(); 
            elseif _fn.isBeyondRightBoundary(this.player) then
                this.player.x = 0; end
            
            if _fn.isBeyondUpperBoundary(this.player) then
                _fn.preventPassingUpperBoundary(this.player); 
            elseif _fn.isBeyondLowerBoundary(this.player) then
                _fn.preventPassingLowerBoundary(this.player); end
            
            local i = 0; while i < this.enemies.length do
                
                if _fn.isBeyondLowerBoundary(ct.indexArray(this.enemies, i)) then
                    _fn.randomizeEnemyPosition(i); end
            i = i + 1; end
            
            if this.player:hit(this.goal) then
                
                _fn.randomizeGoalPosition()
                _fn.incrementScore("++")
            end
            
            local i = 0; while i < this.enemies.length do
                
                if this.player:hit(ct.indexArray(this.enemies, i)) then
                    
                    _fn.randomizeEnemyPosition(i)
                    _fn.incrementScore("--")
                end
            i = i + 1; end
            
            if this.scoreCount < 0 then
                _fn.winningAction(); 
            elseif this.scoreCount == 10 then
                _fn.losingAction(); end
        end
    end
    
    function _fn.isBeyondLeftBoundary(object)
        
        return object.x + (object.width / 2) <= 0
    end
    
    function _fn.isBeyondRightBoundary(object)
        
        return object.x - (object.width / 2) >= ct.getWidth()
    end
    
    function _fn.isBeyondUpperBoundary(object)
        
        return this.player.y - (this.player.height / 2) <= 0
    end
    
    function _fn.isBeyondLowerBoundary(object)
        
        return object.y + (object.height / 2) >= ct.getHeight()
    end
    
    function _fn.preventPassingUpperBoundary(object)
        
        object.y = object.y + 1
        object.ySpeed = 0
    end
    
    function _fn.preventPassingLowerBoundary(object)
        
        object.y = object.y - 1
        object.ySpeed = 0
    end
    
    function _fn.randomizeEnemyPosition(i)
        
        ct.checkArrayIndex(this.enemies, i); this.enemies[1+(i)].x = ct.random(0, ct.toInt(ct.getWidth()))
        ct.checkArrayIndex(this.enemies, i); this.enemies[1+(i)].y = -2
    end
    
    function _fn.randomizeGoalPosition()
        
        this.goal.x = ct.random(0, ct.toInt(ct.getWidth()))
        this.goal.y = ct.random(ct.toInt(ct.getHeight() / 3), ct.toInt(ct.getHeight()))
    end
    
    function _fn.incrementScore(increment)
        
        if (increment == "++") then
            this.scoreCount = this.scoreCount + 1; 
        else 
            this.scoreCount = this.scoreCount - 1; end
        this.score:setText("Score: " .. this.scoreCount .. "    Goal: 10")
    end
    
    function _fn.winningAction()
        
        ct.text("You Lost", ct.toInt(ct.getWidth() / 2), ct.toInt(ct.getHeight() / 2), 10, "dark gray")
        this.player:delete()
        this.goal:delete()
        ct.clearGroup("enemies")
        this.playerDead = true
    end
    
    function _fn.losingAction()
        
        ct.text("You Won!", ct.toInt(ct.getWidth() / 2), ct.toInt(ct.getHeight() / 2), 10, "dark gray")
        this.player:delete()
        this.goal:delete()
        ct.clearGroup("enemies")
        this.playerDead = true
    end
    
    function _fn.onKeyPress(key)
        
        if (key == "up") then
            this.player.ySpeed = -2; 
        elseif (key == "down") then
            this.player.ySpeed = 2; 
        elseif (key == "left") then
            this.player.xSpeed = -2; 
        elseif (key == "right") then
            this.player.xSpeed = 2; end
        
        this.enemyCount = this.enemyCount + 1
        if this.enemyCount < this.enemies.length then
            ct.checkArrayIndex(this.enemies, ct.random(0, this.enemies.length - 1)); this.enemies[1+(ct.random(0, this.enemies.length - 1))].ySpeed = 1; end
    end
    
    function _fn.onKeyRelease(key)
        
        if (key == "up") or (key == "down") then
            this.player.ySpeed = 0; 
        elseif (key == "left") or (key == "right") then
            this.player.xSpeed = 0; end
    end
    
