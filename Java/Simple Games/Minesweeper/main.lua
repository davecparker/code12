this = {}; _fn = {}   -- This file was generated by Code12 from "minesweeper.java"
package.path = package.path .. ';../../Desktop/Code12/?.lua;../../../Desktop/Code12/?.lua'
require('Code12.api')
    
    this.squares = { length = 100, default = nil }
    this.numbMines = 8
    
    
        
        
    
    
    --Function to put the squares into a pseudo 2d array
    function _fn.setBox(x, y, square)
        
        local i = (y * 10) + x
        ct.checkArrayIndex(this.squares, i); this.squares[1+(i)] = square
    end
    
    function _fn.getBoxIndex(square)
        
        local i = 0; while i < this.squares.length do
            
            if square == ct.indexArray(this.squares, i) then
                return i; end
        i = i + 1; end
        return -1
    end
    
    --Returns the text value (mine or nearby mines) of the squares
    function _fn.getBoxValue(x, y)
        
        local i = (y * 10) + x
        
        if i > 0 and i < this.squares.length then
            
            local returnMe = ct.indexArray(this.squares, i)
            return returnMe:getText()
        
        else 
            
            return "badIndex"
        end
    end
    
    function _fn.setBoxValue(x, y, value)
        
        local i = (y * 10) + x
        local setMe = ct.indexArray(this.squares, i)
        setMe:setText(value)
    end
    
    
    
    function _fn.emptySquare(i)
        
        
    end
    
    function _fn.onMousePress(obj, x, y)
        
        if obj ~= nil then
            
            obj.visible = false
            local squareState = obj:getText()
            if (squareState == "Bomb") then
                
                local endText = ct.text("Game Over", 50, 20, 20)
                endText:setLayer(3)
            end
            if (squareState == "") then
                
                
            end
            
        end
    end
    
    function _fn.start()
        
        local x = 0; while x < 10 do
            
            local y = 0; while y < 10 do
                
                local square = ct.rect(2.7 + (x * 5), 2.9 + (y * 5), 5, 5, "gray")
                square.clickable = true
                square:setLayer(2)
                _fn.setBox(x, y, square)
            y = y + 1; end
        x = x + 1; end
        
        --Plants the bombs
        local m = 0
        local bombCords = { length = 8, default = 0 }
        
        while m < this.numbMines do
            
            local randX = ct.random(0, 9)
            local randY = ct.random(0, 9)
            --Checks if there is already a bomb at this randomly selected coordinate
            local uniqueBomb = true
            local newBombCord = 10 * randX + randY
            
            for _, bombChord in ipairs(bombCords) do
                
                if bombChord == newBombCord then
                    uniqueBomb = false; end
            end
            
            if uniqueBomb then
                
                _fn.setBoxValue(randX, randY, "Bomb")
                ct.checkArrayIndex(bombCords, m); bombCords[1+(m)] = newBombCord
                m = m + 1
            end
        end
        
        --Calculates the box numbers
        local x = 0; while x < 10 do
            
            local y = 0; while y < 10 do
                
                local squareState = _fn.getBoxValue(x, y)
                if not (squareState == "Bomb") then
                    
                    local checkX = x - 1
                    local checkY = y - 1
                    local adjBombs = 0
                    local j = 0; while j <= 2 do
                        
                        local k = 0; while k <= 2 do
                            
                            local compare = _fn.getBoxValue(checkX + j, checkY + k)
                            if (compare == "Bomb") then
                                
                                adjBombs = adjBombs + (1)
                            end
                        k = k + 1; end
                    j = j + 1; end
                    if adjBombs == 0 then
                        _fn.setBoxValue(x, y, ""); 
                    else 
                        
                        _fn.setBoxValue(x, y, ct.formatInt(adjBombs))
                    end
                end
            y = y + 1; end
        x = x + 1; end
        
        --Draws the box numbers and bombs
        for _, square in ipairs(this.squares) do
            
            local sqrX = square.x
            local sqrY = square.y
            
            local squareState = square:getText()
            
            if (squareState == "Bomb") then
                
                ct.image("bomb.jpg", sqrX, sqrY, 5)
            
            else 
                
                ct.text(squareState, sqrX, sqrY, 5)
            end
            
        end
    end
    
