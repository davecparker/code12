this = {}; _fn = {}   -- This file was generated by Code12 from "ScreenManagementTest.java"
package.path = package.path .. ';../../Desktop/Code12/?.lua;../../../Desktop/Code12/?.lua'
require('Code12.api')

-- Black box test of screen management APIs
-- Screen Management
-- -----------------
-- ct.setTitle( String title )
-- ct.setHeight( double height )   // on mobile just determines landscape vs. portrait
-- double ct.getWidth( )           // always 100.0
-- double ct.getHeight( )          // default 100.0
-- double ct.getPixelsPerUnit()    // scale factor to convert coordinate units to pixels
-- String ct.getScreen( )
-- ct.setScreen( String name )
-- ct.clearScreen( )
-- ct.clearGroup( String group )
-- ct.setBackColor( String color )
-- ct.setBackColorRGB( int r, int g, int b )
-- ct.setBackImage( String filename )




    
    
        
        
    
    
    this.paused = false; 
    this.displayText = nil; 
    -- return values
    this.displayTextPixels = 0; 
    this.cornerBox = nil; 
    -- stay in bottom right corner as window resizes
    this.cornerBoxPixels = 0; 
    this.updateCount = 0; 
    this.colorsCount = 0; 
    this.pngBackgroundCount = 0; 
    this.jpgBackgroundCount = 0; 
    this.pngBackgroundTotal = 0; 
    this.jpgBackgroundTotal = 0; 
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    this.colorNames = { "black", "white", "red", "green", "blue", "cyan", "majenta", "yellow", "gray", "orange", "pink", "purple", "light gray", "light red", "light green", "light blue", "light cyan", "light majenta", "light yellow", "dark gray", "dark red", "dark green", "dark blue", "dark cyan", "dark majenta", "dark yellow", length = 26 }
    
    function start()
        
        this.paused = false
        this.updateCount = 0
        this.colorsCount = 0
        this.pngBackgroundCount = 1
        this.pngBackgroundTotal = 5
        this.jpgBackgroundCount = 1
        this.jpgBackgroundTotal = 5
        
        -- Screen2 for testing clearScreen() and clearGroup()
        ct.setScreen("2")
        ct.setTitle("clearGroup() and clearScreen() Test")
        ct.setBackImage("background1.jpg")
        
        -- Screen1 for testing other screen management APIs
        ct.setScreen("1")
        this.displayText = ct.text("", 0, 0, 6)
        this.displayText:align("bottom left")
        this.displayText:setLayer(2)
        
        this.cornerBox = ct.rect(100, 0, 10, 10)
        this.cornerBox:align("bottom right")
        
        local pixelsPerUnit = ct.getPixelsPerUnit()
        this.displayTextPixels = ct.round(this.displayText.height * pixelsPerUnit)
        this.cornerBoxPixels = ct.round(this.cornerBox.height * pixelsPerUnit)
    end
    
    function update()
        
        local screen = ct.getScreen()
        
        if screen:equals("1") then
            
            if not this.paused then
                
                this.updateCount = this.updateCount + 1
                ct.setTitle("updateCount=" .. this.updateCount)
                
                if this.updateCount < 151 then
                    
                    ct.setHeight(this.updateCount)
                    this.displayText:setText("ct.getHeight() = " .. ct.getHeight() .. ", ct.getWidth() = " .. ct.getWidth())
                    this.displayText.y = ct.getHeight()
                    
                
                elseif this.updateCount < 151 + 256 then
                    
                    if this.updateCount == 151 then
                        
                        this.displayText:align("top left")
                        this.displayText.y = 0
                        this.displayText:setFillColor("white")
                    end
                    local r = this.updateCount - 151
                    ct.setBackColorRGB(r, 0, 0)
                    this.displayText:setText("ct.setBackColorRGB( " .. r .. ", 0, 0 )")
                
                elseif this.updateCount < 407 + 256 then
                    
                    local g = this.updateCount - 407
                    ct.setBackColorRGB(0, g, 0)
                    this.displayText:setText("ct.setBackColorRGB( 0, " .. g .. ", 0 )")
                
                elseif this.updateCount < 663 + 256 then
                    
                    local b = this.updateCount - 663
                    ct.setBackColorRGB(0, 0, b)
                    this.displayText:setText("ct.setBackColorRGB( 0, 0, " .. b .. " )")
                
                elseif this.updateCount < 919 + 256 then
                    
                    if this.updateCount == 919 then
                        
                        this.displayText:setFillColor("red")
                    end
                    local x = this.updateCount - 919
                    ct.setBackColorRGB(x, x, x)
                    this.displayText:setText("ct.setBackColorRGB( " .. x .. ", " .. x .. ", " .. x .. " )")
                
                elseif (this.updateCount - 1775) % 60 == 0 and this.colorsCount < this.colorNames.length then
                    
                    local colorName = this.colorNames[1+(this.colorsCount)]
                    ct.setBackColor(colorName)
                    this.displayText:setText("ct.setBackColor( " .. colorName .. " )")
                    if colorName:equals("red") then
                        
                        this.displayText:setFillColor("black")
                    end
                    this.colorsCount = this.colorsCount + 1
                
                elseif (this.updateCount - 2735) % 60 == 0 and this.pngBackgroundCount <= this.pngBackgroundTotal then
                    
                    local backgroundFile = "background" .. this.pngBackgroundCount .. ".png"
                    ct.setBackImage(backgroundFile)
                    this.displayText:setText("ct.setBackImage( " .. backgroundFile .. " )")
                    this.pngBackgroundCount = this.pngBackgroundCount + 1
                
                elseif (this.updateCount - 3035) % 60 == 0 and this.jpgBackgroundCount <= this.jpgBackgroundTotal then
                    
                    local backgroundFile = "background" .. this.jpgBackgroundCount .. ".jpg"
                    ct.setBackImage(backgroundFile)
                    this.displayText:setText("ct.setBackImage( " .. backgroundFile .. " )")
                    this.jpgBackgroundCount = this.jpgBackgroundCount + 1
                end
            end
        
        elseif screen:equals("2") then
            
            if ct.random(1, 20) == 1 then
                
                -- Make a shape or image on the screen in a random spot
                local shapeNum = ct.random(1, 4)
                local x = ct.random(0, ct.toInt(ct.getWidth()))
                local y = ct.random(0, ct.toInt(ct.getHeight()))
                local shape = nil; 
                if shapeNum == 1 then
                    
                    shape = ct.rect(x, y, 10, 10)
                    shape.group = "squares"
                
                elseif shapeNum == 2 then
                    
                    shape = ct.circle(x, y, 10)
                    shape.group = "circles"
                
                elseif shapeNum == 3 then
                    
                    shape = ct.line(x, y, x + 10, y + 10)
                    shape.lineWidth = 3
                    shape.group = "lines"
                
                else 
                    
                    shape = ct.image("hampster.png", x, y, 10)
                    shape.group = "images"
                end
            end
        end
    end
    
    function onKeyPress(keyName)
        
        if keyName:equals("space") or keyName:equals("p") then
            
            this.paused = not this.paused
        
        elseif keyName:equals("1") then
            
            ct.setScreen("1")
        
        elseif keyName:equals("2") then
            
            ct.setScreen("2")
        
        elseif keyName:equals("s") then
            
            ct.clearGroup("squares")
        
        elseif keyName:equals("c") then
            
            ct.clearGroup("circles")
        
        elseif keyName:equals("l") then
            
            ct.clearGroup("lines")
        
        elseif keyName:equals("i") then
            
            ct.clearGroup("images")
        
        elseif keyName:equals("a") then
            
            ct.clearScreen()
        end
    end
    
    function onResize()
        
        local pixelsPerUnit = ct.getPixelsPerUnit()
        local size = this.cornerBoxPixels / pixelsPerUnit
        this.cornerBox:setSize(size, size)
        this.cornerBox.x = ct.getWidth()
        this.cornerBox.y = ct.getHeight()
        
        this.displayText.height = this.displayTextPixels / pixelsPerUnit
    end
