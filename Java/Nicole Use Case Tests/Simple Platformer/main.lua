this = {}; _fn = {}   -- This file was generated by Code12 from "SimplePlatformer.java"
package.path = package.path .. ';../../Desktop/Code12/?.lua;../../../Desktop/Code12/?.lua'
require('Code12.api')
    
    this.background = nil; 
    this.playerLeft = nil; 
    this.playerRight = nil; 
    this.platforms = nil; 
    this.items = nil; 
    this.gravity = 0.5
    this.onGround = true
    
    
    
        
        
    
    
    function _fn.start()
        
        
        local width = ct.getWidth()
        local height = ct.getHeight()
        
        this.platforms = { length = 15, default = nil }
        
        --background = ct.image("seamlessbg.jpg", width/2, height/2, width);
        --background.height = height;
        
        -- platforms[0] is the ground
        ct.checkArrayIndex(this.platforms, 0); this.platforms[1+(0)] = ct.rect(width / 2, height, width * 5, 10, "dark blue")
        ct.checkArrayIndex(this.platforms, 1); this.platforms[1+(1)] = ct.rect(30, height - 10, 20, 10, "dark blue")
        ct.checkArrayIndex(this.platforms, 2); this.platforms[1+(2)] = ct.rect(60, height - 20, 25, 20, "dark blue")
        ct.checkArrayIndex(this.platforms, 3); this.platforms[1+(3)] = ct.rect(90, height - 20, 15, 10)
        ct.checkArrayIndex(this.platforms, 4); this.platforms[1+(4)] = ct.rect(110, height - 10, 10, 10)
        ct.checkArrayIndex(this.platforms, 5); this.platforms[1+(5)] = ct.rect(130, height - 15, 20, 10, "light gray")
        ct.checkArrayIndex(this.platforms, 6); this.platforms[1+(6)] = ct.rect(155, height - 20, 10, 10, "gray")
        ct.checkArrayIndex(this.platforms, 7); this.platforms[1+(7)] = ct.rect(175, height - 25, 20, 20, "gray")
        ct.checkArrayIndex(this.platforms, 8); this.platforms[1+(8)] = ct.rect(190, height - 45, 15, 15, "light gray")
        ct.checkArrayIndex(this.platforms, 9); this.platforms[1+(9)] = ct.rect(175, 35, 10, 2, "gray")
        
        local i = 0; while i < 5 do
            
            ct.indexArray(this.platforms, i):setFillColor(nil)
        i = i + 1; end
        
        this.playerLeft = ct.image("stickmanleft.png", 10, 10, 10)
        this.playerLeft.visible = false
        this.playerRight = ct.image("stickmanright.png", 10, 10, 10)
        
        -- only one player visible at a time
        -- one facing left one right
        
    end
    
    function _fn.update()
        
        local width = ct.getWidth()
        local height = ct.getHeight()
        
        if this.playerRight.x > 100 or this.playerLeft.x > 100 then
            
            ct.setScreenOrigin(100, 0)
            
        end
        
        if this.playerRight.x > 200 or this.playerLeft.x > 200 then
            
            ct.setScreenOrigin(200, 0)
        end
        
        if this.playerRight.y >= height then
            
            ct.clearScreen()
            ct.println("You died!")
        end
        
        this.playerRight.ySpeed = this.playerRight.ySpeed + (this.gravity)
        this.playerLeft.ySpeed = this.playerLeft.ySpeed + (this.gravity)
        
        this.playerRight.y = this.playerRight.y + (this.playerRight.ySpeed)
        this.playerLeft.y = this.playerLeft.y + (this.playerLeft.ySpeed)
        
        
        for _, platform in ipairs(this.platforms) do
            
            -- Check to see if player hit a platform
            if this.playerRight:hit(platform) or this.playerLeft:hit(platform) then
                
                -- so we've established that the player collided with a platform, but..
                
                -- if hit from top of platform, this occurs
                if this.playerRight.y < (platform.y - platform.height / 2) or this.playerLeft.y < (platform.y - platform.height / 2) then
                    
                    ct.println("Player hit a platform")
                    this.playerRight.ySpeed = 0.0
                    this.playerLeft.ySpeed = 0.0
                    
                    this.playerRight.y = platform.y - (platform.height / 2 + this.playerRight.height / 2)
                    this.playerLeft.y = platform.y - (platform.height / 2 + this.playerLeft.height / 2)
                    this.onGround = true
                end
                
                -- else, fall back to ground
            end
        end
        
        
    end
    
    -- need to define a hit from above vs. a hit from the side
    function _fn.hitFromTop(player)
        
        
        
    end
    
    function _fn.hitFromSide()
        
        
    end
    
    
    
    function _fn.startJump()
        
        if this.onGround then
            
            ct.println("start the jump")
            this.playerRight.ySpeed = -6.0
            this.playerLeft.ySpeed = -6.0
            
            this.playerRight.xSpeed = 0.5
            this.playerLeft.xSpeed = 0.5
            
            this.onGround = false
        end
    end
    
    function _fn.endJump()
        
        if this.playerRight.ySpeed < -3.0 or this.playerLeft.ySpeed < -3.0 then
            
            ct.println("end the jump")
            this.playerRight.ySpeed = -3.0
            this.playerLeft.ySpeed = -3.0
            this.playerRight.xSpeed = 0
            this.playerLeft.xSpeed = 0
        end
    end
    
    
    function _fn.onKeyRelease(keyName)
        
        if (keyName == "left") then
            
            this.playerRight.xSpeed = 0
            this.playerLeft.xSpeed = 0
        end
        
        if (keyName == "right") then
            
            this.playerRight.xSpeed = 0
            this.playerLeft.xSpeed = 0
        end
        
        --if ( keyName.equals("space"))
        
        
        
        
        
    end
    
    
    function _fn.onKeyPress(keyName)
        
        
        if (keyName == "space") then
            
            _fn.startJump()
            ct.println("spacebar was pressed")
            ct.sound("retro_jump.wav")
            _fn.endJump()
        end
        
        if (keyName == "left") then
            
            this.playerRight.visible = false
            this.playerLeft.visible = true
            this.playerRight.xSpeed = this.playerRight.xSpeed - (1)
            this.playerLeft.xSpeed = this.playerLeft.xSpeed - (1)
        end
        
        if (keyName == "right") then
            
            this.playerRight.visible = true
            this.playerLeft.visible = false
            this.playerRight.xSpeed = this.playerRight.xSpeed + (1)
            this.playerLeft.xSpeed = this.playerLeft.xSpeed + (1)
            
        end
        
        
        
        
        
    end


