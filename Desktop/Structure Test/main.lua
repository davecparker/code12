this = {}; _fn = {}   -- This file was generated by Code12 from "StructureTest.java"
package.path = package.path .. ';../../Desktop/Code12/?.lua;../../../Desktop/Code12/?.lua'
require('Code12.api')
    
    -- instance variables
    this.fish = nil; this.ball = nil; this.bigBall = nil; 
    -- GameObj[] moreBalls = new GameObj[10];
    this.count = 0; this.total = 0; 
    this.gameOver = false
    
    
        
        
    
    
    function _fn.start()
        
        local X = 50
        local y = 0; 
        y = X
        this.ball = ct.circle(X, y, 30)
    end
    
    function _fn.foo(i, d)
        
        return 0
    end
    
    function _fn.test(i, d)
        
        if i < 0 then
            return i + 1; 
        else 
            
            i = i + (3)
            d = d * (2)
        end
        
        if d == i then
            d = i; 
        elseif d < i then
            d = -i; 
        else 
            i = 0; end
        
        repeat
            i = i + 1; 
        until not (i < 0)
        
        d = 13
        
        while i > 10 do
            
            i = i - 1
            i = i + 1
        end
        
        d = 24
        
        local j = i; while j < 10 do
            
            d = d + (i)
            i = i - 1
        end
        
        i = 0
        
        return 0
    end
    
    -- More instance variables
    this.LIMIT = 120 + 4
    this.speed = 0.3
    this.frameCount = _fn.foo(this.LIMIT, this.speed * 2)
    this.newCount = this.frameCount + 2 * -this.frameCount
    this.str = "Testing"
    
    function _fn.update()
        
        _fn.moveBall(false)
    end
    
    function _fn.onMousePress(obj, x, y)
        
        -- if (obj != null)
        -- {
        --     obj.xSpeed = .1;
        --     ct.println( obj.toString() + " was clicked" );
        -- }
        -- else
        --     ct.println( "Mouse was pressed at (" + x + ", " + y + ")" );
    end
    
    -- Move the ball
    function _fn.moveBall(wrap)
        
        this.ball.x = this.ball.x + 1
        if wrap then
            
            local checked = true
            if this.ball.x > 100 then
                this.ball.x = 0; end
        end
        return this.ball.x
    end
    
    function _fn.makeCircles()
        
        local circles = { length = 10, default = nil }
        for _, c in ipairs(circles) do
            c:setFillColor("black"); end
        local scores = { 10, 20, 30, length = 3, default = 0 }
        return circles
    end


